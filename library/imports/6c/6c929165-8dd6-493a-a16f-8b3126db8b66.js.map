{"version":3,"sources":["../../../../assets/Script/assets/Script/Car.ts"],"names":[],"mappings":";;;;AAAA,oBAAoB;AACpB,iFAAiF;AACjF,yFAAyF;AACzF,mBAAmB;AACnB,2FAA2F;AAC3F,mGAAmG;AACnG,8BAA8B;AAC9B,2FAA2F;AAC3F,mGAAmG;;AAE7F,IAAA,kBAAqC,EAAnC,oBAAO,EAAE,sBAAQ,CAAmB;AAC5C,IAAM,aAAa,GAAG;IAClB,IAAI,EAAE,MAAM;IACZ,KAAK,EAAE,OAAO;IACd,IAAI,EAAE,MAAM;CACf,CAAA;AAGD;IAAsC,4BAAY;IADlD;QAAA,qEAwDC;QApDG,WAAK,GAAa,IAAI,CAAC;QAGvB,UAAI,GAAW,OAAO,CAAC;QAGvB,eAAS,GAAW,aAAa,CAAC,IAAI,CAAA;;IA8C1C,CAAC;IA5CG,wBAAwB;IAExB,yBAAM,GAAN;QACI,IAAI,CAAC,eAAe,EAAE,CAAA;IAC1B,CAAC;IAED,wBAAK,GAAL;IAEA,CAAC;IAED,yBAAM,GAAN,UAAO,EAAE;IAET,CAAC;IAED,kCAAe,GAAf;QAAA,iBAsBC;QArBG,IAAI,QAAQ,GAAW,CAAC,EACpB,MAAM,GAAW,CAAC,EAClB,SAAS,GAAY,KAAK,EAC1B,QAAQ,GAAW,CAAC,CAAA;QACxB,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,UAAC,KAA0B;YACnE,SAAS,GAAG,IAAI,CAAA;YAChB,QAAQ,GAAG,KAAK,CAAC,YAAY,EAAE,CAAA;YAC/B,MAAM,GAAG,KAAI,CAAC,IAAI,CAAC,CAAC,CAAA;QACxB,CAAC,CAAC,CAAA;QACF,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE,UAAC,KAA0B;YAClE,IAAI,CAAC,SAAS,EAAE;gBACZ,OAAO;aACV;YACD,IAAI,IAAI,GAAG,KAAK,CAAC,YAAY,EAAE,GAAG,QAAQ,CAAA;YAC1C,KAAI,CAAC,WAAW,CAAC,IAAI,GAAG,QAAQ,CAAC,CAAA;YACjC,QAAQ,GAAG,IAAI,CAAA;YACf,KAAI,CAAC,IAAI,CAAC,CAAC,GAAG,MAAM,GAAG,IAAI,CAAA;QAC/B,CAAC,CAAC,CAAA;QACF,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,UAAU,KAA0B;YAC1E,IAAI,CAAC,SAAS,GAAG,aAAa,CAAC,IAAI,CAAA;QACvC,CAAC,CAAC,CAAA;IACN,CAAC;IAED,8BAAW,GAAX,UAAY,CAAC;QACT,IAAM,CAAC,GAAG,EAAE,GAAG,CAAC,CAAA;QAChB,IAAM,MAAM,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAA;QAC9D,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAI,MAAM,CAAA;QACxC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,IAAI,MAAM,CAAA;IAC5C,CAAC;IAnDD;QADC,QAAQ,CAAC,EAAE,CAAC,KAAK,CAAC;2CACI;IAGvB;QADC,QAAQ;0CACc;IAGvB;QADC,QAAQ;+CAC6B;IATrB,QAAQ;QAD5B,OAAO;OACa,QAAQ,CAuD5B;IAAD,eAAC;CAvDD,AAuDC,CAvDqC,EAAE,CAAC,SAAS,GAuDjD;kBAvDoB,QAAQ","file":"","sourceRoot":"../../../../assets/Script","sourcesContent":["// Learn TypeScript:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/typescript.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/typescript.html\n// Learn Attribute:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] http://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst { ccclass, property } = cc._decorator;\nconst derectionType = {\n    LEFT: 'left',\n    RIGHT: 'right',\n    IDLE: 'idle'\n}\n\n@ccclass\nexport default class NewClass extends cc.Component {\n\n    @property(cc.Label)\n    label: cc.Label = null;\n\n    @property\n    text: string = 'hello';\n\n    @property\n    derection: string = derectionType.IDLE\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        this.setInputControl()\n    }\n\n    start() {\n\n    }\n\n    update(dt) {\n\n    }\n\n    setInputControl() {\n        let startDot: number = 0,\n            startX: number = 0,\n            dragStart: boolean = false,\n            lastMove: number = 0\n        this.node.on(cc.Node.EventType.TOUCH_START, (event: cc.Event.EventTouch) => {\n            dragStart = true\n            startDot = event.getLocationX()\n            startX = this.node.x\n        })\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, (event: cc.Event.EventTouch) => {\n            if (!dragStart) {\n                return;\n            }\n            let move = event.getLocationX() - startDot\n            this.wheelScroll(move - lastMove)\n            lastMove = move\n            this.node.x = startX + move\n        })\n        this.node.on(cc.Node.EventType.TOUCH_END, function (event: cc.Event.EventTouch) {\n            this.derection = derectionType.IDLE\n        })\n    }\n\n    wheelScroll(x) {\n        const r = 58 / 2\n        const rotate = x % (Math.PI * 2 * r) / (Math.PI * 2 * r) * 360\n        this.node.children[0].rotation += rotate\n        this.node.children[1].rotation += rotate\n    }\n}\n"]}