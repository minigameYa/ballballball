{"version":3,"sources":["../../../../assets/Script/assets/Script/Ball.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../assets/Script","sourcesContent":["import { ballScale, ballDerection } from \"./modules/data\"\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class NewClass extends cc.Component {\n\n    @property\n    scale: number = ballScale.NORMAL\n    num: number = 0\n    jumpDuration: number = 2\n    maxY: number = 0\n    jumpAction: cc.Action\n    derection: number\n    speed: number = 1\n    game: any = null\n\n    @property(cc.Label)\n    points: cc.Label = null\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        this.node.width = this.node.width * this.scale\n        this.node.height = this.node.height * this.scale\n        this.jumpAction = this.setJumpAction()\n        this.node.runAction(this.jumpAction);\n        (<any>this.node.children[0]).string = this.num + ''\n        this.speed = this.derection == ballDerection.Right ? this.speed : -this.speed\n    }\n\n    start() {\n\n    }\n\n    setJumpAction() {\n        let groundY = this.game.ground.y\n        if (this.scale == ballScale.NORMAL) {\n            this.jumpDuration = 1\n        }\n        if (this.scale == ballScale.BIG) {\n            this.jumpDuration = 2\n        }\n        if (this.scale == ballScale.BIGBIG) {\n            this.jumpDuration = 3\n        }\n        const jumpUp = cc.moveBy(this.jumpDuration, cc.p(0, this.maxY - groundY - this.node.height / 2)).easing(cc.easeCubicActionOut())\n        const jumpDown = cc.moveBy(this.jumpDuration, cc.p(0, - this.maxY + groundY + this.node.height / 2)).easing(cc.easeCubicActionIn())\n        return cc.repeatForever(cc.sequence(jumpDown, jumpUp));\n    }\n\n    ballCrossAction() {\n        let borderX = this.game.node.width / 2\n        if (this.node.x + this.node.width / 2 + this.speed >= borderX && this.derection === ballDerection.Right) {\n            this.node.x = borderX - this.node.width / 2\n            this.speed = -this.speed\n            this.derection = ballDerection.Left\n            return;\n        }\n        if (this.node.x - this.node.width / 2 + this.speed <= -borderX && this.derection === ballDerection.Left) {\n            this.node.x = -borderX + this.node.width / 2\n            this.speed = -this.speed\n            this.derection = ballDerection.Right\n            return;\n        }\n        this.node.x += this.speed\n    }\n\n    // 获取小车坐标\n    getCarPosition() {\n        const carPos = this.game.car.getPosition()\n        const dist = cc.pDistance(this.node.position, carPos)\n        return dist\n    }\n\n    // 触碰到小车\n    onCrash() {\n        if (this.getCarPosition() < this.node.width / 2 + this.game.car.width / 2) {\n            console.log('game over')\n            this.node.stopAllActions()\n            this.destroy()\n        }\n    }\n\n    update(dt) {\n        this.onCrash()\n        this.points.string = this.num + ''\n        this.ballCrossAction()\n    }\n}\n"]}