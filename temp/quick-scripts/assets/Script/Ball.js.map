{"version":3,"sources":["Ball.ts"],"names":[],"mappings":"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","file":"","sourceRoot":"../../../../assets/Script","sourcesContent":["import { ballScale, ballDerection, ballPositions, ballColor } from \"./modules/data\"\nconst { ccclass, property } = cc._decorator;\n\n@ccclass\nexport default class NewClass extends cc.Component {\n\n  @property\n  scale: number = ballScale.NORMAL\n  num: number = 0\n  jumpDuration: number = 1\n  maxY: number = 0\n  jumpAction: cc.Action\n  derection: number\n  speed: number = 1\n  game: any = null\n  id: number = 0\n  HP: number = 0\n  done: boolean = false\n\n  @property(cc.Label)\n  points: cc.Label = null\n  // LIFE-CYCLE CALLBACKS:\n\n  onLoad() {\n    this.node.width = this.node.width * this.scale\n    this.node.height = this.node.height * this.scale\n    this.setJumpAction();\n    this.speed = this.derection == ballDerection.Right ? this.speed : -this.speed\n    ballPositions[this.id].node = this\n    ballPositions[this.id].width = this.node.width\n    ballPositions[this.id].x = this.node.x\n    ballPositions[this.id].y = this.node.y\n    this.changeColor()\n  }\n\n  changeColor() {\n    for (let key in ballColor) {\n      if (this.num > parseInt(key)) {\n        this.node.color = cc.color(...ballColor[key])\n      }\n    }\n  }\n\n  start() {\n\n  }\n\n  setJumpAction() {\n    let groundY = this.game.ground.y\n    if (this.scale == ballScale.NORMAL) {\n      this.jumpDuration = 1\n    }\n    if (this.scale == ballScale.BIG) {\n      this.jumpDuration = 1.5\n    }\n    if (this.scale == ballScale.BIGBIG) {\n      this.jumpDuration = 2\n    }\n\n    const jumpUp = cc.moveBy(this.jumpDuration, cc.p(0, this.maxY - groundY - this.node.height / 2)).easing(cc.easeCubicActionOut())\n    const jumpDown = cc.moveBy(this.jumpDuration, cc.p(0, - this.maxY + groundY + this.node.height / 2)).easing(cc.easeCubicActionIn())\n    const jumpAction = cc.repeatForever(cc.sequence(jumpDown, jumpUp))\n    if (this.node.y !== this.maxY) {\n      const transUp = cc.moveBy(this.jumpDuration / 2, cc.p(0, this.game.node.height / 10)).easing(cc.easeCubicActionOut())\n      const trans = cc.moveBy(this.jumpDuration, cc.p(0, groundY + this.node.height / 2 - this.node.y - this.game.node.height / 10)).easing(cc.easeCubicActionIn())\n      const callback = cc.callFunc(function () {\n        this.node.runAction(cc.repeatForever(cc.sequence(jumpUp, jumpDown)))\n      }, this)\n      const transAction = cc.sequence(transUp, trans, callback)\n      this.node.runAction(transAction)\n    } else {\n      this.node.runAction(jumpAction);\n    }\n\n  }\n\n  ballCrossAction() {\n    let borderX = this.game.node.width / 2\n    if (this.node.x + this.node.width / 2 + this.speed >= borderX && this.derection === ballDerection.Right) {\n      this.node.x = borderX - this.node.width / 2\n      this.speed = -this.speed\n      this.derection = ballDerection.Left\n      return;\n    }\n    if (this.node.x - this.node.width / 2 + this.speed <= -borderX && this.derection === ballDerection.Left) {\n      this.node.x = -borderX + this.node.width / 2\n      this.speed = -this.speed\n      this.derection = ballDerection.Right\n      return;\n    }\n    this.node.x += this.speed\n  }\n  // 获取小车坐标\n  getCarPosition() {\n    const carPos = this.game.car.getPosition()\n    const dist = cc.pDistance(this.node.position, carPos)\n    return dist\n  }\n\n  // 触碰到小车\n  onCrash() {\n    if (this.getCarPosition() < this.node.width / 2 + this.game.car.width / 2) {\n      this.game.gameOver()\n    }\n  }\n\n  over() {\n    this.done = true\n    this.node.stopAllActions()\n    this.node.destroy()\n    delete ballPositions[this.id]\n  }\n\n  // 被子弹打到\n  onShooted() {\n    this.num--\n    this.points.string = this.num + ''\n    if (this.num == 0) {\n      this.game.splitBall(this)\n      this.game.spawnCoins(this.node.x, this.node.y)\n      this.node.destroy()\n      delete ballPositions[this.id]\n      let hasBigger = false\n      for (let k in ballPositions) {\n        if (ballPositions[k].node.scale !== ballScale.NORMAL) {\n          hasBigger = true\n        }\n      }\n      if (!hasBigger) {\n        this.game.spawnNewBall()\n      }\n      if (!Object.keys(ballPositions).length) {\n        alert('你赢了！')\n      }\n    }\n  }\n\n  update(dt) {\n    if (this.done) {\n      return;\n    }\n    this.points.string = this.num + ''\n    this.ballCrossAction()\n    ballPositions[this.id].x = this.node.x\n    ballPositions[this.id].y = this.node.y\n    this.onCrash()\n  }\n}"]}