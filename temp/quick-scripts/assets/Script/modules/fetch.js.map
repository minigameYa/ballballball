{"version":3,"sources":["fetch.ts"],"names":[],"mappings":";;;;;AAAA,oCAA+B;AAC/B,+BAAwC;AACxC,+DAA8C;AAC9C,+BAA0D;AAE1D,2BAAM,CAAC,WAAW,CAAC,gBAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAA;AAE3C,qBAA4B,QAAmB;IAC7C,OAAO,CAAC,GAAG,CAAC,2BAAM,CAAC,CAAA;IACnB,IAAI,WAAI,CAAC,OAAO;QAAE,OAAM;IACxB,eAAQ,CAAC,MAAM,CAAC,CAAA;IAChB,2BAAM,CAAC,KAAK,CAAC;QACX,OAAO,YAAC,MAAM;YACZ,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAA;YACnB,IAAI,MAAM,EAAE;gBACV,kBAAW,CAAC,MAAM,CAAC,CAAA;gBACnB,WAAI,CAAC,OAAO,GAAG,IAAI,CAAA;gBACnB,WAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAA;gBAChC,QAAQ,IAAI,QAAQ,EAAE,CAAA;aACvB;iBAAM;gBACL,+BAA+B;gBAC/B,2BAAM,CAAC,OAAO,CAAC;oBACb,GAAG,EAAE,gBAAM,CAAC,OAAO,CAAC,UAAU;oBAC9B,KAAK,EAAE,IAAI;oBACX,OAAO,YAAC,MAAM;wBACZ,kBAAW,CAAC,MAAM,CAAC,CAAA;wBACnB,WAAI,CAAC,OAAO,GAAG,IAAI,CAAA;wBACnB,WAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAA;wBAChC,QAAQ,IAAI,QAAQ,EAAE,CAAA;oBACxB,CAAC;oBAED,IAAI,YAAC,KAAK;wBACR,gBAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;wBACxB,OAAO,CAAC,GAAG,CAAC,cAAc,EAAE,KAAK,CAAC,CAAA;oBACpC,CAAC;iBACF,CAAC,CAAA;aACH;QACH,CAAC;QAED,IAAI,YAAC,KAAK;YACR,gBAAS,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;YACxB,OAAO,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,CAAC,CAAA;QAC5B,CAAC;KACF,CAAC,CAAA;AACJ,CAAC;AArCD,kCAqCC;AAED,4BAA4B;AAC5B,4BAA4B,QAAQ;IAClC,IAAI,WAAW,GAAG,CAAC,CAAC,CAAA;IACpB,IAAI,eAAQ,IAAI,eAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;QACnC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACxC,IAAI,eAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,QAAQ,EAAE;gBACrC,WAAW,GAAG,CAAC,CAAA;aAChB;SACF;KACF;IAED,IAAI,WAAW,IAAI,CAAC,EAAC;QACnB,eAAQ,CAAC,MAAM,CAAC,WAAW,EAAE,WAAW,CAAC,CAAA;KAC1C;AACH,CAAC;AAGD,OAAO;AACP,4BAA4B,QAAQ,EAAE,KAAK;IACzC,IAAI,eAAQ,IAAI,eAAQ,CAAC,MAAM,GAAG,CAAC,EAAC;QAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,eAAQ,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;YACvC,IAAI,eAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,KAAK,QAAQ,EAAC;gBACpC,eAAQ,CAAC,CAAC,CAAC,CAAC,KAAK,GAAG,KAAK,CAAA;gBACzB,OAAM;aACP;SACF;KACF;IACD,eAAQ,CAAC,IAAI,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAC,CAAC,CAAA;AACpD,CAAC","file":"","sourceRoot":"../../../../../assets/Script/modules","sourcesContent":["import config from '../config';\nimport { user, rankList } from './data';\nimport qcloud from '../libs/wafer2-client-sdk'\nimport { showBusy, showSuccess, showModel } from './util';\n\nqcloud.setLoginUrl(config.service.loginUrl)\n\nexport function handleLogin(callback?: Function) {\n  console.log(qcloud)\n  if (user.isLogin) return\n  showBusy('正在登录')\n  qcloud.login({\n    success(result) {\n      console.log(result)\n      if (result) {\n        showSuccess('登录成功')\n        user.isLogin = true\n        user.userInfo = result.data.data\n        callback && callback()\n      } else {\n        // 如果不是首次登录，不会返回用户信息，请求用户信息接口获取\n        qcloud.request({\n          url: config.service.requestUrl,\n          login: true,\n          success(result) {\n            showSuccess('登录成功')\n            user.isLogin = true\n            user.userInfo = result.data.data\n            callback && callback()\n          },\n\n          fail(error) {\n            showModel('请求失败', error)\n            console.log('request fail', error)\n          }\n        })\n      }\n    },\n\n    fail(error) {\n      showModel('登录失败', error)\n      console.log('登录失败', error)\n    }\n  })\n}\n\n//榜单删除离线用户， 只简单以nickName为key\nfunction removeRealTimeRank(nickName) {\n  var removeIndex = -1\n  if (rankList && rankList.length > 0) {\n    for (var i = 0; i < rankList.length; i++) {\n      if (rankList[i].username === nickName) {\n        removeIndex = i\n      }\n    }\n  }\n\n  if (removeIndex >= 0){\n    rankList.splice(removeIndex, removeIndex)\n  }\n}\n\n\n//更新下榜单\nfunction updateRealTimeRank(nickName, score){\n  if (rankList && rankList.length > 0){\n    for (var i = 0; i < rankList.length; i++){\n      if (rankList[i].username === nickName){\n        rankList[i].score = score\n        return\n      }\n    }\n  }\n  rankList.push({ username: nickName, score: score})\n}"]}